
package Graficas;

import Clases.Buscador;
import Clases.Conexion;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

public class Puertas extends javax.swing.JFrame {
    PreparedStatement ps = null;
    ResultSet rs = null;
    Conexion conn = new Conexion();
    public Puertas() {
         initComponents();
        this.setTitle("Inventario  de puertas");
        this.setLocationRelativeTo(null);
        Image logo = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/ranelagh.png"));
        this.setIconImage(logo);
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            jtPuertas.setModel(modelo);
            
            Connection con = conn.getConexion();
           String sql = Buscador.mostrarPuerta(); // llamo al metodo mostrar puerta de la clase buscador, para visualizar la tabla puertas completa
           ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData(); // obtener todos los datos de la tabla
            int cantColumnas = rsMd.getColumnCount();//contar columnas
            /**
             * Agregar columnas a la tabla para visualizar los datos
             */
            
            modelo.addColumn("Cliente");
            modelo.addColumn("Estado");
            modelo.addColumn("Proveedor");
            modelo.addColumn("Producto");
            modelo.addColumn("Linea");
            modelo.addColumn("Modelo");
            modelo.addColumn("Hoja");
            modelo.addColumn("Marco");
            modelo.addColumn("Mano");
            modelo.addColumn("Orden");
            modelo.addColumn("Fecha Pedido");
            modelo.addColumn("Fecha Recibido");
            modelo.addColumn("Valor");
            modelo.addColumn("Ubicacion");
            modelo.addColumn("Modulo");
            modelo.addColumn("Fila");
            modelo.addColumn("Observaciones");

            //verificar que existan datos en la tabla
            while (rs.next()) {
                Object[] filas = new Object[cantColumnas];
                for (int i = 0; i < cantColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
        } catch (SQLException e) {
            System.out.println(e.toString());
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtPuertas = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbFiltro2 = new javax.swing.JComboBox<>();
        txtBuscador = new javax.swing.JTextField();
        cmbFiltro1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Titulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtPuertas.setAutoCreateRowSorter(true);
        jtPuertas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cliente", "Estado", "Proveedor", "Producto", "Linea", "Modelo", "Hoja", "Marco", "Mano", "Orden", "Fecha Pedido", "Fecha Recibido", "Valor", "Ubicacion", "Modulo", "Fila", "Observaciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtPuertas);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 1750, 570));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 60, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Filtros");
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(120, 10, 80, 30);

        cmbFiltro2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbFiltro2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        cmbFiltro2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmbFiltro2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFiltro2ActionPerformed(evt);
            }
        });
        jPanel1.add(cmbFiltro2);
        cmbFiltro2.setBounds(150, 50, 150, 30);

        txtBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorKeyReleased(evt);
            }
        });
        jPanel1.add(txtBuscador);
        txtBuscador.setBounds(310, 50, 250, 30);

        cmbFiltro1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cmbFiltro1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cliente", "Estado", "Proveedor", "Producto", "Linea", "Modelo", "Hoja", "Marco", "Mano", "Orden", "Fecha Pedido", "Fecha Recibido", "Ubicacion", "Modulo", "Fila", "Observaciones" }));
        cmbFiltro1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        cmbFiltro1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmbFiltro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFiltro1ActionPerformed(evt);
            }
        });
        jPanel1.add(cmbFiltro1);
        cmbFiltro1.setBounds(10, 50, 130, 30);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Filtrar por palabra clave");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(310, 10, 250, 30);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 580, 110));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Titulo.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titulo.setText("Estado de Stock de puertas");
        Titulo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        jPanel2.add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 10, -1, 60));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 510, 70));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
          Home.puertas = null;// permite cerrar y volver a iniciar el formulario
    }//GEN-LAST:event_formWindowClosing

    private void cmbFiltro2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFiltro2ActionPerformed
       
    }//GEN-LAST:event_cmbFiltro2ActionPerformed

    private void txtBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorKeyReleased
/**
 * Filtro sensitivo para buscar por palabras clave combinando con el primer filtro
 */      
        String filtro = Buscador.filtroCondicional()+cmbFiltro1.getSelectedItem().toString()+ " LIKE '"+ txtBuscador.getText()+ "%'";
        //System.out.println(filtro); linea para debbugear
        try {
           DefaultTableModel modelo = new DefaultTableModel();
            jtPuertas.setModel(modelo);
            Connection con = conn.getConexion();
           ps = con.prepareStatement(filtro);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantColumnas = rsMd.getColumnCount();//contar columnas
            modelo.addColumn("Cliente");
            modelo.addColumn("Estado");
            modelo.addColumn("Proveedor");
            modelo.addColumn("Producto");
            modelo.addColumn("Linea");
            modelo.addColumn("Modelo");
            modelo.addColumn("Hoja");
            modelo.addColumn("Marco");
            modelo.addColumn("Mano");
            modelo.addColumn("Orden");
            modelo.addColumn("Fecha Pedido");
            modelo.addColumn("Fecha Recibido");
            modelo.addColumn("Valor");
            modelo.addColumn("Ubicacion");
            modelo.addColumn("Modulo");
            modelo.addColumn("Fila");
            modelo.addColumn("Observaciones");
            while (rs.next()) {
                Object[] filas = new Object[cantColumnas];
                for (int i = 0; i < cantColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
            
        } catch (SQLException e) {
            System.out.println(e.toString());
        }
    
    }//GEN-LAST:event_txtBuscadorKeyReleased

    private void cmbFiltro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFiltro1ActionPerformed

    }//GEN-LAST:event_cmbFiltro1ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Puertas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Puertas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Puertas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Puertas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Puertas().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Titulo;
    private javax.swing.JComboBox<String> cmbFiltro1;
    private javax.swing.JComboBox<String> cmbFiltro2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jtPuertas;
    private javax.swing.JTextField txtBuscador;
    // End of variables declaration//GEN-END:variables



}

